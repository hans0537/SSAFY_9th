local 저장소 (내 컴퓨터 폴더 안에 있는 파일들을 깃 저장소로 올리는 과정) => IDE 사용 안하고 
폴더 생성후 그 폴더에서 마우스 우클릭 git bash 키기

git 이 관리하는 3가지 영역

 - Working Directory : 사용자의 작업이 이루어지는 곳

 - Staging Area ( =Index) :  커밋을 위한 파일, 폴더가 추가되는 곳

 - Repository : staging area 에 있던 파일 및 폴더의 변경사항을 저장하는 곳

관리 하는 순서
  Working Directory => Staging Area => Repository 의 과정으로 버전관리를 수행한다.


git config --global user.name 깃 이름
git config --global user.email 깃 가입시 이메일
git config --global --list: 등록한 이름과 이메일 표시

git init => git 으로 관리를 시작한다는 명령어
   - 현재 작업중인 디렉토리를 Git 으로 관리 한다는 명령어
   - .git 이라는 숨김 폴더를 생성하고, 터미널에는 master라고 표기 됩니다.
(예: SSAFY@DESKTOP-DOGVPUB MINGW64 ~/Desktop/git_test (master))

※ 이미 Git 으로 관리되고 있는 (Git 저장소인) 폴더 안에서 또다른 Git 저장소를 만들지 않도록 주의합니다.
(중첩 금지) => 터미널에 이미 (master) 가 표시되어 있다면 git init 라는 명령어를 입력하지 않는다.
절대로 홈디렉토리에서 git init 을 입력하지 않는다. (터미널의 경로가 ~ 인지 확인한다.)

git status

working Directory 와 Staging Area 에 있는 파일의 현재 상태를 알려주는 명령어
어떤 작업을 시행하기 전에 수시로  status로 현재 상태를 확인하면 좋다

파일의 상태??

1. Untracked : Git이 관리 하지 않는 파일 (한번도 Staging Area에 올라간적이 없는 파일)
2. Tracked : Git이 관리하는 파일
 - Unmodified : 최신상태
 - Modified : 수정되었지만 아직 Staging Area 에는 올라가지 않은 상태
 - Staged : Staging Area에 올라간 상태

git add

 - working directory 에 있는 파일을 Staging area로 올리는 명령어
 - Git 이 해당 파일을 추적(관리) 할 수 있도록 만든다.
 - Untracked, Modified => Staged 로 상태를 변경한다.

 파일 하나만 올리기
 git add 파일 이름
 
 폴더 올리기
 git add 폴더이름

 현재 디렉토리에 속한 파일/폴더 전부 올리기
 git add .

git remote add origin 저장소 주소

git commit (git commit -m "커밋 메세지")

 - Staging Area에 올라온 파일의 변경사항을 하나의 버전(커밋)으로 저장하는 명령어
 - 커밋 메세지는 현재 변경사항들을 잘 나타낼수 있도록 의미있게 작성하는 것을 권장한다.
 - 각각의 커밋은 sha-1 알고리즘에 의해 반환된 고유의 해시값을 ID로 가진다.
 - root commit 은 해당 커밋이 최초의 커밋일때만 표시된다.

git log

  - 커밋 내역 (ID, 작성자, 시간, 메시지) 을 조회할 수 있는 명령어
  - 옵션
    - --oneline : 한줄로 축약해서 보여준다.
    - --graph : 브렌치와 머지 내역을 그래프로 보여준다.


### 원격 저장소에 업로드

  - 파일을 Github 원격 저장소에 업로드
  - 정화히 말하자면, 파일을 업로드 하는게 아니라 커밋 내역을 업로드 하는것
  - 로컬 저장소에서 커밋을 생성해야 원격 저장소에 업로드 할 수 있다.

git push

  - 로컬 저장소 커밋을 원격 저장소에 업로드 하는 명령어
  - git push 저장소 이름 브랜치 이름 형식으로 작성합니다.
  - -u 옵션을 사용하면, 두번째 커밋부터는 저장소이름과 브랜치이름 생략 가능

######################################################################################

## 원격 저장소 가져오기

git clone

  - 원격 저장소의 커밋 내역을 모두 가져와서, 로컬 저장소를 생성하는 명령어
  - clone "복제" 라는 뜻으로, git clone 명령어를 사용하면 원격 저장소를 통째로 복제해서 내 컴퓨터에 옮길 수 있다

  git clone 원격저장소주소

    - git clone을 통해 생성된 로컬저장소는 git init, git remote add 가 이미 수행되어 있다.


  git pull

    - 원격 저장소의 변경 사항을 가져와서, 로컬 저장소를 업데이트 하는 명령어
    - 로컬 저장소와 원격 저장소의 내용이 완전 일치하면, git pull 을 해도 아무런 변화가 일어나지 않습니다.
    - .git 파일이 있는 폴더 안에서 pull
    git pull 저장소이름 브랜치이름
    git pull origin master


